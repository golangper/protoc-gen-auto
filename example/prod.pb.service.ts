// Generated by the protocol buffer compiler.  DO NOT EDIT!
// Source: example/prod.proto

import { Injectable } from '@angular/core';
import { HttpClient, HttpParams, HttpHeaders, HttpErrorResponse } from '@angular/common/http';
import { Observable, throwError } from 'rxjs';
import { catchError } from 'rxjs/operators';

export interface Prod {
  id: number;
  name: string;
  details: string;
  skus: Sku[];
}

export interface Sku {
  skuId: number;
  price: number;
  bn: string;
  weight: number;
  prodId: number;
}

export interface ProdId {
  id: number;
}

const httpOptions = {
  headers: new HttpHeaders({'Content-Type':  'application/json'})
};

@Injectable()
export class ProductService {
  url = 'https://myfoodie.com';
  constructor(private http: HttpClient) { }

  getProd(param: ProdId): Observable<Prod> {
    const params = new HttpParams();
    params.set('id', '' + param.id);
    return this.http.get<Prod>(this.url + '/v1/prod/getProd', {params: params})
      .pipe(
        catchError(this.handleError)
      );
  }

  setProd(param: Prod): Observable<{}> {
    return this.http.post<{}>(this.url + '/v1/prod/setProd', param, httpOptions)
      .pipe(
        catchError(this.handleError)
      );
  }

  private handleError(error: HttpErrorResponse) {
    if (error.error instanceof ErrorEvent) {
      console.error('An error occurred:', error.error.message);
    } else {
      console.error(`Backend returned code ${error.status},body was: ${error.error}`);
    }
    return throwError('Something bad happened; please try again later.');
  }
}
